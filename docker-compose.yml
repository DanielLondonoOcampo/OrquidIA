services:
  frontend:
    build:
      context: ./f_container/orquidia # Path to the frontend directory
      dockerfile: DockerFile
    ports:
      - "3000:3000" # Map host port to container port
    networks:
      - app-network
    # environment:
    #   - NODE_ENV=production

  backend:
    build:
      context: ./b_container # Path to the backend directory
      dockerfile: DockerFile
    ports:
      - "8000:8000" # Map host port to container port
    networks:
      - app-network
    # environment:
    #   - DATABASE_URL=postgres://user:password@db:5432/mydatabase
    # depends_on:
    #   - db

  m_learning:
    build:
      context: ./ml_container # Path to the ML model directory
      dockerfile: DockerFile
    ports:
      - "5000:5000" # Map host port to container port
    networks:
      - app-network

  # db:
  #   image: postgres:latest # Use an official PostgreSQL image
  #   environment:
  #     POSTGRES_DB: mydatabase
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - db_data:/var/lib/postgresql/data # Persist data in a volume
  #   networks:
  #     - app-network

networks:
  app-network:
# volumes:
#   db_data: # Define a volume for persistent database storage
